{"ast":null,"code":"var _jsxFileName = \"/home/mohmad/Documents/TodoList/src/views/TodoList.js\";\nimport React, { Component } from 'react';\nimport Todos from '../components/Todos/Todos';\nimport TodosForm from '../components/Todos/TodosForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.initialState = localStorage.getItem(\"todos\") ? JSON.parse(localStorage.getItem(\"todos\")) : [];\n    this.state = {\n      todos: this.initialState,\n      aciveTodos: {},\n      mode: \"add\"\n    };\n  }\n\n  render() {\n    let {\n      todos,\n      aciveTodos,\n      mode\n    } = this.state;\n\n    const setToLocal = todos => {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n    };\n\n    const setTodos = todos => {\n      this.setState({\n        todos\n      });\n    };\n\n    const setAciveTodos = todo => {\n      this.setState({\n        aciveTodos: todo\n      });\n    };\n\n    const setMode = mode => {\n      this.setState({\n        mode\n      });\n    };\n\n    const changeTodoCompletion = id => {\n      let curTodos = [...todos];\n      let newTodos = curTodos.map(el => {\n        if (el.id === id) {\n          el.done = !el.done;\n          return el;\n        }\n\n        return el;\n      });\n      setToLocal(newTodos);\n      setTodos(newTodos);\n    };\n\n    let deleteTodo = id => {\n      let curTodos = [...todos];\n      let newTodos = curTodos.filter(el => el.id !== id);\n      setToLocal(newTodos);\n      setTodos(newTodos);\n    };\n\n    let addTodos = title => {\n      if (mode !== 'edit') {\n        let newTodo = {\n          id: Date.now(),\n          title: title,\n          done: false\n        };\n        let newTodos = [...todos, newTodo];\n        setToLocal(newTodos);\n        setTodos(newTodos);\n      } else {\n        let curTodos = [...todos];\n        let newTodos = curTodos.map(el => {\n          if (el.id === aciveTodos.id) {\n            el.title = title;\n            return el;\n          }\n\n          return el;\n        });\n        setToLocal(newTodos);\n        setTodos(newTodos);\n        setAciveTodos({});\n        setMode(\"add\");\n      }\n    };\n\n    let showUncomplete = () => {\n      // if (mode === 'not-done') {\n      // \tsetMode(\"add\")\n      // }else\n      // {\n      // \tsetMode(\"not-done\")\n      // }\n      mode === 'not-done' ? setMode(\"add\") : setMode(\"not-done\");\n    };\n\n    let currentTodos = [...todos];\n\n    if (mode === 'not-done') {\n      currentTodos = currentTodos.filter(todo => !todo.done);\n    }\n\n    let editMode = todo => {\n      setMode(\"edit\");\n      setAciveTodos(todo);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todos\",\n          children: [/*#__PURE__*/_jsxDEV(TodosForm, {\n            addTodos: addTodos,\n            showUncomplete: showUncomplete,\n            mode: mode,\n            todos: mode !== \"edit\" ? currentTodos : [aciveTodos]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Todos, {\n            todos: mode !== 'edit' ? currentTodos : [aciveTodos],\n            changeTodoCompletion: changeTodoCompletion,\n            deleteTodo: deleteTodo,\n            editMode: editMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/home/mohmad/Documents/TodoList/src/views/TodoList.js"],"names":["React","Component","Todos","TodosForm","TodoList","initialState","localStorage","getItem","JSON","parse","state","todos","aciveTodos","mode","render","setToLocal","setItem","stringify","setTodos","setState","setAciveTodos","todo","setMode","changeTodoCompletion","id","curTodos","newTodos","map","el","done","deleteTodo","filter","addTodos","title","newTodo","Date","now","showUncomplete","currentTodos","editMode"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAShCI,YATgC,GASjBC,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAgCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAhC,GAA4E,EAT3D;AAAA,SAYhCG,KAZgC,GAYxB;AACPC,MAAAA,KAAK,EAAE,KAAKN,YADL;AAEPO,MAAAA,UAAU,EAAC,EAFJ;AAGPC,MAAAA,IAAI,EAAC;AAHE,KAZwB;AAAA;;AAkBhCC,EAAAA,MAAM,GAAE;AAEP,QAAI;AAACH,MAAAA,KAAD;AAASC,MAAAA,UAAT;AAAsBC,MAAAA;AAAtB,QAA8B,KAAKH,KAAvC;;AAEA,UAAMK,UAAU,GAAIJ,KAAD,IAAW;AAC7BL,MAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA+BR,IAAI,CAACS,SAAL,CAAeN,KAAf,CAA/B;AACA,KAFD;;AAIA,UAAMO,QAAQ,GAAIP,KAAD,IAAW;AAC3B,WAAKQ,QAAL,CAAc;AAACR,QAAAA;AAAD,OAAd;AACA,KAFD;;AAIA,UAAMS,aAAa,GAAIC,IAAD,IAAU;AAC/B,WAAKF,QAAL,CAAc;AAACP,QAAAA,UAAU,EAACS;AAAZ,OAAd;AACA,KAFD;;AAIA,UAAMC,OAAO,GAAIT,IAAD,IAAU;AACzB,WAAKM,QAAL,CAAc;AAACN,QAAAA;AAAD,OAAd;AACA,KAFD;;AAIA,UAAMU,oBAAoB,GAAIC,EAAD,IAAQ;AACpC,UAAIC,QAAQ,GAAG,CAAC,GAAGd,KAAJ,CAAf;AACA,UAAIe,QAAQ,GAAGD,QAAQ,CAACE,GAAT,CAAcC,EAAD,IAAQ;AACnC,YAAIA,EAAE,CAACJ,EAAH,KAAUA,EAAd,EAAkB;AACjBI,UAAAA,EAAE,CAACC,IAAH,GAAU,CAACD,EAAE,CAACC,IAAd;AACA,iBAAOD,EAAP;AACA;;AACD,eAAOA,EAAP;AACA,OANc,CAAf;AAOAb,MAAAA,UAAU,CAACW,QAAD,CAAV;AACAR,MAAAA,QAAQ,CAACQ,QAAD,CAAR;AACA,KAXD;;AAaA,QAAII,UAAU,GAAIN,EAAD,IAAQ;AACxB,UAAIC,QAAQ,GAAG,CAAC,GAAGd,KAAJ,CAAf;AACA,UAAIe,QAAQ,GAAGD,QAAQ,CAACM,MAAT,CAAiBH,EAAD,IAAQA,EAAE,CAACJ,EAAH,KAAUA,EAAlC,CAAf;AACAT,MAAAA,UAAU,CAACW,QAAD,CAAV;AACAR,MAAAA,QAAQ,CAACQ,QAAD,CAAR;AACA,KALD;;AAOA,QAAIM,QAAQ,GAAIC,KAAD,IAAW;AAEzB,UAAIpB,IAAI,KAAK,MAAb,EAAqB;AACpB,YAAIqB,OAAO,GAAG;AACbV,UAAAA,EAAE,EAACW,IAAI,CAACC,GAAL,EADU;AAEbH,UAAAA,KAAK,EAACA,KAFO;AAGbJ,UAAAA,IAAI,EAAC;AAHQ,SAAd;AAMA,YAAIH,QAAQ,GAAG,CAAC,GAAGf,KAAJ,EAAYuB,OAAZ,CAAf;AACAnB,QAAAA,UAAU,CAACW,QAAD,CAAV;AACAR,QAAAA,QAAQ,CAACQ,QAAD,CAAR;AAEA,OAXD,MAWK;AAEJ,YAAID,QAAQ,GAAG,CAAC,GAAGd,KAAJ,CAAf;AACA,YAAIe,QAAQ,GAAGD,QAAQ,CAACE,GAAT,CAAcC,EAAD,IAAQ;AACnC,cAAIA,EAAE,CAACJ,EAAH,KAAUZ,UAAU,CAACY,EAAzB,EAA6B;AAC5BI,YAAAA,EAAE,CAACK,KAAH,GAAWA,KAAX;AACA,mBAAOL,EAAP;AACA;;AACD,iBAAOA,EAAP;AACA,SANc,CAAf;AAOAb,QAAAA,UAAU,CAACW,QAAD,CAAV;AACAR,QAAAA,QAAQ,CAACQ,QAAD,CAAR;AACAN,QAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,QAAAA,OAAO,CAAC,KAAD,CAAP;AACA;AACD,KA5BD;;AA8BA,QAAIe,cAAc,GAAG,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AAEAxB,MAAAA,IAAI,KAAK,UAAT,GAAsBS,OAAO,CAAC,KAAD,CAA7B,GAAuCA,OAAO,CAAC,UAAD,CAA9C;AACA,KATD;;AAWA,QAAIgB,YAAY,GAAG,CAAC,GAAG3B,KAAJ,CAAnB;;AAEA,QAAIE,IAAI,KAAK,UAAb,EAAyB;AAExByB,MAAAA,YAAY,GAAGA,YAAY,CAACP,MAAb,CAAqBV,IAAD,IAAU,CAACA,IAAI,CAACQ,IAApC,CAAf;AACA;;AAED,QAAIU,QAAQ,GAAIlB,IAAD,IAAU;AACxBC,MAAAA,OAAO,CAAC,MAAD,CAAP;AACAF,MAAAA,aAAa,CAACC,IAAD,CAAb;AACA,KAHD;;AAMA,wBACC;AAAA,6BACG;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACC;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACC,QAAC,SAAD;AACC,YAAA,QAAQ,EAAEW,QADX;AAEC,YAAA,cAAc,EAAEK,cAFjB;AAGC,YAAA,IAAI,EAAExB,IAHP;AAIC,YAAA,KAAK,EAAEA,IAAI,KAAK,MAAT,GAAkByB,YAAlB,GAAiC,CAAC1B,UAAD;AAJzC;AAAA;AAAA;AAAA;AAAA,kBADD,eAOC,QAAC,KAAD;AACC,YAAA,KAAK,EAAGC,IAAI,KAAK,MAAT,GAAkByB,YAAlB,GAAiC,CAAC1B,UAAD,CAD1C;AAEC,YAAA,oBAAoB,EAAEW,oBAFvB;AAGC,YAAA,UAAU,EAAEO,UAHb;AAIC,YAAA,QAAQ,EAAES;AAJX;AAAA;AAAA;AAAA;AAAA,kBAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADD;AAoBA;;AApI+B;;AAuIjC,eAAenC,QAAf","sourcesContent":["import React , { Component } from 'react';\nimport Todos from '../components/Todos/Todos'\nimport TodosForm from '../components/Todos/TodosForm'\n\nclass TodoList extends Component {\n\n\t// let initialState = [\n\t// \t{id: 1 , title: \"شراء مستلزمات\" , done: false },\n\t// \t{id: 2 , title: \"شراء منتجات\" , done: false },\n\t// \t{id: 3 , title: \"مشاهدة كورس ريأكت\" , done: false },\n\t// \t{id: 4 , title: \"كتابة كود المشروع الجديد\" , done: false }\n\t// ]\n\n\tinitialState = localStorage.getItem(\"todos\") ? JSON.parse(localStorage.getItem(\"todos\")) : []\n\n\t// mode => add || \"not-done\" || edit\n\tstate = {\n\t\ttodos: this.initialState,\n\t\taciveTodos:{},\n\t\tmode:\"add\"\n\t}\n\n\trender(){\n\n\t\tlet {todos , aciveTodos , mode} = this.state;\n\n\t\tconst setToLocal = (todos) => {\n\t\t\tlocalStorage.setItem(\"todos\" , JSON.stringify(todos))\n\t\t}\n\n\t\tconst setTodos = (todos) => {\n\t\t\tthis.setState({todos})\n\t\t}\n\n\t\tconst setAciveTodos = (todo) => {\n\t\t\tthis.setState({aciveTodos:todo})\n\t\t}\n\n\t\tconst setMode = (mode) => {\n\t\t\tthis.setState({mode})\n\t\t}\n\n\t\tconst changeTodoCompletion = (id) => {\n\t\t\tlet curTodos = [...todos];\n\t\t\tlet newTodos = curTodos.map((el) => {\n\t\t\t\tif (el.id === id) {\n\t\t\t\t\tel.done = !el.done\n\t\t\t\t\treturn el\n\t\t\t\t}\n\t\t\t\treturn el\n\t\t\t})\n\t\t\tsetToLocal(newTodos)\n\t\t\tsetTodos(newTodos)\n\t\t}\n\n\t\tlet deleteTodo = (id) => {\n\t\t\tlet curTodos = [...todos];\n\t\t\tlet newTodos = curTodos.filter((el) => el.id !== id)\n\t\t\tsetToLocal(newTodos)\n\t\t\tsetTodos(newTodos)\n\t\t}\n\n\t\tlet addTodos = (title) => {\n\n\t\t\tif (mode !== 'edit') {\n\t\t\t\tlet newTodo = {\n\t\t\t\t\tid:Date.now(),\n\t\t\t\t\ttitle:title,\n\t\t\t\t\tdone:false\n\t\t\t\t}\n\n\t\t\t\tlet newTodos = [...todos , newTodo];\n\t\t\t\tsetToLocal(newTodos)\n\t\t\t\tsetTodos(newTodos)\n\t\t\t\t\n\t\t\t}else{\n\n\t\t\t\tlet curTodos = [...todos];\n\t\t\t\tlet newTodos = curTodos.map((el) => {\n\t\t\t\t\tif (el.id === aciveTodos.id) {\n\t\t\t\t\t\tel.title = title\n\t\t\t\t\t\treturn el\n\t\t\t\t\t}\n\t\t\t\t\treturn el\n\t\t\t\t});\n\t\t\t\tsetToLocal(newTodos)\n\t\t\t\tsetTodos(newTodos)\n\t\t\t\tsetAciveTodos({})\n\t\t\t\tsetMode(\"add\")\n\t\t\t}\n\t\t}\n\n\t\tlet showUncomplete = () => {\n\t\t\t// if (mode === 'not-done') {\n\t\t\t// \tsetMode(\"add\")\n\t\t\t// }else\n\t\t\t// {\n\t\t\t// \tsetMode(\"not-done\")\n\t\t\t// }\n\n\t\t\tmode === 'not-done' ? setMode(\"add\") : setMode(\"not-done\")\n\t\t}\n\n\t\tlet currentTodos = [...todos]\n\n\t\tif (mode === 'not-done') {\n\n\t\t\tcurrentTodos = currentTodos.filter((todo) => !todo.done)\n\t\t}\n\n\t\tlet editMode = (todo) => {\n\t\t\tsetMode(\"edit\")\n\t\t\tsetAciveTodos(todo)\n\t\t}\n\n\n\t\treturn (\n\t\t\t<main>\n\t\t    <div className=\"container\">\n\t\t    \t<div className=\"todos\">\n\t\t    \t\t<TodosForm \n\t\t    \t\t\taddTodos={addTodos} \n\t\t    \t\t\tshowUncomplete={showUncomplete} \n\t\t    \t\t\tmode={mode} \n\t\t    \t\t\ttodos={mode !== \"edit\" ? currentTodos : [aciveTodos]}\n\t\t    \t\t/>\n\t\t    \t\t<Todos \n\t\t    \t\t\ttodos={ mode !== 'edit' ? currentTodos : [aciveTodos]} \n\t\t    \t\t\tchangeTodoCompletion={changeTodoCompletion} \n\t\t    \t\t\tdeleteTodo={deleteTodo} \n\t\t    \t\t\teditMode={editMode} \n\t\t    \t\t/>\n\t\t    \t</div>\n\t\t    </div>\n\t\t\t</main>\n\t\t);\n\t}\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}