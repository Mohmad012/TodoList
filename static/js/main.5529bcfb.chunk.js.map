{"version":3,"sources":["store/types.js","store/todos/todosActions.js","store/modes/modesActions.js","components/todos/Todo.js","components/todos/Todos.js","components/todos/TodosForm.js","views/TodoList.js","components/Header.js","App.js","store/todos/todosReducer.js","store/modes/modesReducers.js","store/allReducers.js","index.js"],"names":["modesTypes","todosTypes","setActiveTodo","todo","type","payload","changeMode","mode","Todo","props","dispatch","useDispatch","changeTodoCompletion","id","editCompletion","title","done","className","onClick","icon","size","deleteTodo","Todos","allTodos","useSelector","state","todosState","todos","activeTodo","modesState","useState","setTodos","useEffect","notDoneTodos","filter","td","localStorage","setItem","JSON","stringify","map","length","TodosForm","newTitle","setNewTitle","btnString","placeholder","onChange","event","target","value","newTodo","Date","now","disabled","trim","TodoList","Header","App","initialState","getItem","parse","getCompletionTodos","getDeleteTodos","getEditTodos","todosReducer","action","modesReducer","allReducers","combineReducers","todosReducers","modesReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5529bcfb.chunk.js","sourcesContent":["export const modesTypes = {\r\n  ADD: \"ADD\",\r\n  NOT_DONE: \"NOT_DONE\",\r\n  EDIT: \"EDIT\",\r\n  CHANGE_MODE: \"CHANGE_MODE\",\r\n};\r\nexport const todosTypes = {\r\n  ADD_TODO: \"ADD_TODO\",\r\n  EDIT_TODO: \"EDIT_TODO\",\r\n  SET_ACTIVE_TODO: \"SET_ACTIVE_TODO\",\r\n  EDIT_COMPLETION: \"EDIT_COMPLETION\",\r\n  DELETE_TODO: \"DELETE_TODO\",\r\n};\r\n","import { todosTypes } from \"../types\";\r\nexport const addNewTodo = (todo) => {\r\n  return {\r\n    type: todosTypes.ADD_TODO,\r\n    payload: todo,\r\n  };\r\n};\r\n\r\nexport const editCompletion = (id) => {\r\n  return {\r\n    type: todosTypes.EDIT_COMPLETION,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const deleteTodo = (id) => {\r\n  return {\r\n    type: todosTypes.DELETE_TODO,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const setActiveTodo = (todo) => {\r\n  return {\r\n    type: todosTypes.SET_ACTIVE_TODO,\r\n    payload: todo,\r\n  };\r\n};\r\n\r\nexport const editTodo = (title) => {\r\n  return {\r\n    type: todosTypes.EDIT_TODO,\r\n    payload: title,\r\n  };\r\n};\r\n","import { modesTypes } from \"../types\";\r\n\r\nexport const changeMode = (mode) => {\r\n  return {\r\n    type: modesTypes.CHANGE_MODE,\r\n    payload: mode,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport FeatherIcon from \"feather-icons-react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  editCompletion,\r\n  deleteTodo,\r\n  setActiveTodo,\r\n} from \"../../store/todos/todosActions\";\r\nimport { changeMode } from \"../../store/modes/modesActions\";\r\nimport { modesTypes } from \"../../store/types\";\r\n\r\nconst Todo = (props) => {\r\n  const dispatch = useDispatch();\r\n  const changeTodoCompletion = (id) => {\r\n    dispatch(editCompletion(id));\r\n  };\r\n\r\n  const editTodo = (todo) => {\r\n    dispatch(changeMode(modesTypes.EDIT));\r\n    dispatch(setActiveTodo(todo));\r\n  };\r\n\r\n  let { id, title, done } = props.todo;\r\n  return (\r\n    <div className={done ? \"todos-todo done\" : \"todos-todo \"}>\r\n      <div className=\"todos-todo_icon\" onClick={() => changeTodoCompletion(id)}>\r\n        <FeatherIcon icon={done ? \"check-circle\" : \"circle\"} />\r\n      </div>\r\n      <div className=\"todos-todo_text\"> {title} </div>\r\n      <div className=\"todos-todo_cta\">\r\n        <div\r\n          className=\"todos-todo_cta-edit\"\r\n          onClick={() => editTodo(props.todo)}\r\n        >\r\n          <FeatherIcon icon=\"edit\" size=\"20\" />\r\n        </div>\r\n        <div\r\n          className=\"todos-todo_cta-delete\"\r\n          onClick={() => dispatch(deleteTodo(id))}\r\n        >\r\n          <FeatherIcon icon=\"trash-2\" size=\"20\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { modesTypes } from \"../../store/types\";\r\n\r\nconst Todos = (props) => {\r\n  const allTodos = useSelector((state) => state.todosState.todos);\r\n  const activeTodo = useSelector((state) => state.todosState.activeTodo);\r\n  const mode = useSelector((state) => state.modesState.mode);\r\n\r\n  const [todos, setTodos] = useState([]);\r\n  useEffect(() => {\r\n    if (mode === modesTypes.ADD) {\r\n      setTodos(allTodos);\r\n    } else if (mode === modesTypes.EDIT) {\r\n      setTodos([activeTodo]);\r\n    } else if (mode === modesTypes.NOT_DONE) {\r\n      let notDoneTodos = allTodos.filter((td) => td.done === false);\r\n      setTodos(notDoneTodos);\r\n    }\r\n  }, [mode, allTodos, activeTodo]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(allTodos));\r\n  }, [allTodos]);\r\n\r\n  return (\r\n    <div className=\"todos-list\">\r\n      {todos.map((todo) => {\r\n        return <Todo todo={todo} key={todo.id} />;\r\n      })}\r\n      {todos.length === 0 ? (\r\n        <h3 className=\"no-todos\">لا يوجد مهام حالية ..</h3>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport FeatherIcon from \"feather-icons-react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeMode } from \"../../store/modes/modesActions\";\r\nimport {\r\n  addNewTodo,\r\n  editTodo,\r\n  setActiveTodo,\r\n} from \"../../store/todos/todosActions\";\r\nimport { modesTypes } from \"../../store/types\";\r\n\r\nconst TodosForm = (props) => {\r\n  const [newTitle, setNewTitle] = useState(\"\");\r\n\r\n  const mode = useSelector((state) => state.modesState.mode);\r\n  const activeTodo = useSelector((state) => state.todosState.activeTodo);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (mode === modesTypes.EDIT && activeTodo) {\r\n      setNewTitle(activeTodo.title);\r\n    }\r\n  }, [mode, activeTodo]);\r\n\r\n  const showUncompleteHandle = () => {\r\n    if (mode === modesTypes.ADD) {\r\n      dispatch(changeMode(modesTypes.NOT_DONE));\r\n    } else if (mode === modesTypes.NOT_DONE) {\r\n      dispatch(changeMode(modesTypes.ADD));\r\n    }\r\n  };\r\n\r\n  const newTitleHandler = (event) => {\r\n    setNewTitle(event.target.value);\r\n  };\r\n\r\n  const addNewTodoHandler = () => {\r\n    if (mode !== modesTypes.EDIT) {\r\n      const newTodo = {\r\n        id: Date.now(),\r\n        title: newTitle,\r\n        done: false,\r\n      };\r\n\r\n      dispatch(addNewTodo(newTodo));\r\n      setNewTitle(\"\");\r\n    } else {\r\n      dispatch(editTodo(newTitle));\r\n      dispatch(setActiveTodo({}));\r\n      dispatch(changeMode(modesTypes.ADD));\r\n      setNewTitle(\"\");\r\n    }\r\n  };\r\n\r\n  let btnString = \"إضافة\";\r\n  if (mode === modesTypes.EDIT) {\r\n    btnString = \"تعديل ..\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"todos-form\">\r\n      <div\r\n        className={\r\n          mode === modesTypes.NOT_DONE\r\n            ? \"todos-form_icon active\"\r\n            : \"todos-form_icon\"\r\n        }\r\n        onClick={showUncompleteHandle}\r\n      >\r\n        <FeatherIcon icon=\"circle\" />\r\n      </div>\r\n      <div className=\"todos-form_form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"اضف مهمة جديدة ...\"\r\n          onChange={newTitleHandler}\r\n          value={newTitle}\r\n        />\r\n      </div>\r\n      <div className=\"todos-form_submit\">\r\n        <button\r\n          className=\"btn\"\r\n          onClick={addNewTodoHandler}\r\n          disabled={newTitle.trim() ? false : true}\r\n        >\r\n          {btnString}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodosForm;\r\n","import React from \"react\";\r\n\r\nimport Todos from \"../components/todos/Todos\";\r\nimport TodosForm from \"../components/todos/TodosForm\";\r\n\r\nconst TodoList = () => {\r\n  return (\r\n    <main>\r\n      <div className=\"container\">\r\n        <div className=\"todos\">\r\n          <TodosForm />\r\n          <Todos />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Header = () => {\r\n  const todos = useSelector((state) => state.todosState.todos);\r\n  return (\r\n    <header>\r\n      <h1>\r\n        قائمة المهام <span>( {todos && todos.length} )</span>\r\n      </h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import TodoList from \"./views/TodoList\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import { todosTypes } from \"../types\";\r\n\r\nconst localTodos = localStorage.getItem(\"todos\")\r\n  ? JSON.parse(localStorage.getItem(\"todos\"))\r\n  : [];\r\n\r\nconst initialState = {\r\n  todos: localTodos,\r\n  activeTodo: {},\r\n};\r\n\r\nconst todosReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case todosTypes.ADD_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, action.payload],\r\n      };\r\n    case todosTypes.EDIT_COMPLETION:\r\n      return {\r\n        ...state,\r\n        todos: getCompletionTodos(state.todos, action.payload),\r\n      };\r\n    case todosTypes.DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: getDeleteTodos(state.todos, action.payload),\r\n      };\r\n    case todosTypes.SET_ACTIVE_TODO:\r\n      return {\r\n        ...state,\r\n        activeTodo: action.payload,\r\n      };\r\n    case todosTypes.EDIT_TODO:\r\n      return {\r\n        ...state,\r\n        todos: getEditTodos(state.todos, state.activeTodo, action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst getCompletionTodos = (todos, id) => {\r\n  return todos.map((td) => {\r\n    if (td.id === id) {\r\n      td.done = !td.done;\r\n      return td;\r\n    } else {\r\n      return td;\r\n    }\r\n  });\r\n};\r\n\r\nconst getDeleteTodos = (todos, id) => {\r\n  return todos.filter((td) => td.id !== id);\r\n};\r\n\r\nconst getEditTodos = (todos, todo, title) => {\r\n  return todos.map((td) => {\r\n    if (td.id === todo.id) {\r\n      td.title = title;\r\n      return td;\r\n    } else {\r\n      return td;\r\n    }\r\n  });\r\n};\r\n\r\nexport default todosReducer;\r\n","import { modesTypes } from \"../types\";\r\n\r\nconst initialState = {\r\n  mode: modesTypes.ADD,\r\n};\r\n// mode => add || not-done || edit\r\nconst modesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case modesTypes.CHANGE_MODE:\r\n      return {\r\n        ...state,\r\n        mode: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default modesReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport todosReducers from \"./todos/todosReducer\";\r\nimport modesReducers from \"./modes/modesReducers\";\r\n\r\nconst allReducers = combineReducers({\r\n  todosState: todosReducers,\r\n  modesState: modesReducers,\r\n});\r\n\r\nexport default allReducers;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./assets/style.css\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport allReducers from \"./store/allReducers\";\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}